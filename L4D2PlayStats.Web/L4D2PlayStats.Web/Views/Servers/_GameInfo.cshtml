@using L4D2PlayStats.Core.Auth
@using L4D2PlayStats.Web
@using Microsoft.Extensions.Localization

@model L4D2PlayStats.Web.Models.ServerInfoModel

@inject IStringLocalizer<SharedResource> SharedLocalizer
@inject ICurrentUser CurrentUser

@section Styles {
    <style>
        .table-survivors,
        .table-infecteds {
            width: 100%;
        }

            .table-survivors .img-character,
            .table-infecteds .img-infected {
                margin-bottom: 5px;
                padding-right: 5px;
            }

            .table-survivors .img-avatar,
            .table-infecteds .img-avatar {
                padding-right: 5px;
            }

            .table-survivors .img-weapon {
                display: inline-block;
                height: 15px;
                padding-right: 5px;
                margin-bottom: 5px;
            }

            .table-survivors .progress,
            .table-infecteds .progress {
                margin-bottom: 0;
                border-radius: 0;
            }

            .table-survivors .table-hp-progress,
            .table-infecteds .table-hp {
                width: 100%;
                margin-bottom: 5px;
                white-space: nowrap;
            }

                .table-survivors .table-hp-progress .progress,
                .table-infecteds .table-hp .progress {
                    height: 12px;
                }

                .table-survivors .table-hp-progress .hp-progress-number,
                .table-infecteds .table-hp .hp-number {
                    padding: 0;
                    margin: 0;
                    padding-left: 10px;
                    font-size: 11px;
                    text-align: center;
                }

            .table-survivors hr,
            .table-infecteds hr {
                margin: 0px 0px 5px 0;
            }

        .temporary {
            opacity: 0.5;
        }

        .img-latency {
            display: inline-block;
            height: 16px;
        }

        .img-gray {
            -webkit-filter: grayscale(100%);
            filter: grayscale(100%);
        }

        .td-latency {
            width: 40px;
        }

        .row-players .panel-body {
            padding: 5px;
        }

        #chat-messages {
            height: 400px;
            overflow-x: hidden;
            overflow-y: auto;
            padding-right: 10px;
        }

        .spectators a {
            margin-left: 8px;
        }
    </style>
}

@section Scripts {
    <script>
        var refreshInterval = 2600;

        var dd = new diffDOM.DiffDOM();

        function sync(current, html) {
            var source = document.createElement('div');
            source.id = current.id;
            source.innerHTML = html;

            var diffs = dd.diff(current, source);
            dd.apply(current, diffs);
        }

        function refreshHeader() {
            $.ajax({
                url: 'servers/header',
                type: 'GET',
                timeout: 2000,
                success: function (html) {
                    var target = document.getElementById('game-info-header');
                    sync(target, html);

                },
                error: function (xhr, textStatus) {
                    if (textStatus === 'timeout') {
                        refreshHeader();
                    }
                },
                complete: function (xhr, textStatus) {
                    if (textStatus !== 'timeout') {
                        setTimeout(refreshHeader, refreshInterval);
                    }
                }
            });
        };

        function refreshPlayers() {
            $.ajax({
                url: 'servers/players',
                type: 'GET',
                timeout: 2000,
                success: function (html) {
                    var target = document.getElementById('game-info-players');
                    sync(target, html);
                },
                error: function (xhr, textStatus) {
                    if (textStatus === 'timeout') {
                        refreshPlayers();
                    }
                },
                complete: function (xhr, textStatus) {
                    if (textStatus !== 'timeout') {
                        setTimeout(refreshPlayers, refreshInterval);
                    }
                }
            });
        };

        function refreshMessages() {
            var after = $('#chat-messages p[data-message-when]').last().data('message-when') || 0;

            $.ajax({
                url: 'servers/messages?after=' + after,
                type: 'GET',
                timeout: 2000,
                success: function (html) {
                    if (!html)
                        return;

                    var chatMessages = $('#chat-messages');
                    var scrollDown = chatMessages[0].scrollHeight - chatMessages.scrollTop() === chatMessages.outerHeight();

                    $('#chat-messages').append(html);

                    $('#chat-messages p[data-message-when]').each(function () {
                        var messageWhen = $(this).data('message-when');
                        if (messageWhen) {
                            var $duplicates = $('#chat-messages p[data-message-when="' + messageWhen + '"]').slice(1);
                            $duplicates.remove();
                        }
                    });

                    if (scrollDown)
                        chatMessages.scrollTop(chatMessages[0].scrollHeight);
                },
                error: function (xhr, textStatus) {
                    if (textStatus === 'timeout') {
                        refreshMessages();
                    }
                },
                complete: function (xhr, textStatus) {
                    if (textStatus !== 'timeout') {
                        setTimeout(refreshMessages, refreshInterval / 2);
                    }
                }
            });
        };

        function sendMessage() {
            var message = $('#message').val().trim();
            if (!message)
                return;

            $.ajax({
                url: '/api/external-chat',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ message: message }),
                success: function (result) {
                    if (!result)
                        return;

                    if (result.success) {
                        refreshMessages();
                        $('#message').val('');
                    } else {
                        alert(result.errorMessage)
                    }
                }
            });
        }

        $(document).ready(function () {
            refreshHeader();
            refreshPlayers();
            refreshMessages();

            $('#chat-messages').scrollTop($('#chat-messages')[0].scrollHeight);

             $('#chatForm').on('submit', function () {
                sendMessage();
            });

             $('#message').on('keypress', function (e) {
                if (e.which === 13) {
                    e.preventDefault();
                    sendMessage();
                }
            });

            $('#message').on('input', function() {
                var message = $('#message').val().trim();
                $('button[type="submit"]').prop('disabled', message.length === 0);
            });
        });
    </script>
}

<h4 class="text-center">@SharedLocalizer["Servers"]</h4>

<div id="game-info-header">
    @await Html.PartialAsync("_Header", Model)
</div>

<div id="game-info-players">
    @await Html.PartialAsync("_Players", Model)
</div>

<div class="row" style="margin-top: 20px">
    <div class="col-md-6 col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                @SharedLocalizer["ChatMessages"]
            </div>
            <div class="panel-body">
                <div id="chat-messages" style="margin-bottom: 20px">
                    @await Html.PartialAsync("_Messages", Model.GameInfo.AllMessages)
                </div>
                @if (CurrentUser.IsAuthenticated)
                {
                    <form id="chatForm" class="form-inline" onsubmit="return false;">
                        <div class="input-group" style="width: 100%">
                            <input type="text" id="message" name="message" class="form-control" placeholder="@SharedLocalizer["TypeYourMessage"]" />
                            <span class="input-group-btn">
                                <button type="submit" class="btn btn-primary btn-block" disabled>
                                    @SharedLocalizer["Send"]
                                </button>
                            </span>
                        </div>
                    </form>
                }
                else
                {
                    <a href="@Url.Action("Login", "Account")" class="btn btn-default btn-block">
                        <img src="~/imgs/steam.png" alt="@SharedLocalizer["LoginWithSteam"]" title="@SharedLocalizer["LoginWithSteam"]" class="img-responsive img-header-icon">
                        @SharedLocalizer["ChatLoginRequiredMessage"]
                    </a>
                }
            </div>
        </div>
    </div>
</div>

<div class="row hide-mobile">
    <div class="col-md-12 text-center">
        <a href="@Url.Action("Index", "Connect")" class="btn btn-sm btn-primary" style="margin: 10px">
            connect @Model.ServerIp
        </a>
    </div>
</div>