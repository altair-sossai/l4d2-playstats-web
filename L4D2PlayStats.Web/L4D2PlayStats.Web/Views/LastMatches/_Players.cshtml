@using L4D2PlayStats.Infrastructure.Extensions
@using L4D2PlayStats.Sdk.Matches.Results
@using L4D2PlayStats.UserAvatar
@model L4D2PlayStats.Sdk.Matches.Results.MatchResult.TeamResult
@inject IUserAvatar UserAvatar

<table class="players" style="border-spacing: 10px;">
    @foreach (var players in Model.Players?
                  .OrderByDescending(p => p.TotalMvp)
                  .ThenByDescending(p => p.MvpSiDamage)
                  .ThenByDescending(p => p.MvpCommon)
                  .Chunk(2) ?? new List<MatchResult.PlayerResult[]>())
    {
        <tr>
            @foreach (var player in players)
            {
                <td class="background" style="background-image: url('@UserAvatar[player.CommunityId]'); width: 50%">
                    <h3>
                        @for (var i = 0; i < player.MvpCommon; i++)
                        {
                            <img src="~/imgs/icons/star-blue.png" alt="Star" class="icon star"/>
                        }
                        @player.Name?.Truncate(30)
                        @for (var i = 0; i < player.MvpSiDamage; i++)
                        {
                            <img src="~/imgs/icons/star.png" alt="Star" class="icon star"/>
                        }
                    </h3>
                </td>
            }
        </tr>
    }
</table>