@using L4D2PlayStats.Sdk.Statistics.Results
@using L4D2PlayStats.UserAvatar
@using L4D2PlayStats.Web
@using Microsoft.Extensions.Localization
@model L4D2PlayStats.Web.Models.StatisticsDetailsModel
@inject IStringLocalizer<SharedResource> SharedLocalizer
@inject IUserAvatar UserAvatar

@section Styles {
    <style>

    </style>
}

@{
    var statistics = Model.Statistics;
    var match = Model.Match;
    var statistic = statistics.Statistic;
    var halves = statistic?.Halves ?? StatisticsResult.HalfResult.EmptyCollection;
    var teamA = statistic?.TeamA ?? StatisticsResult.PlayerNameResult.EmptyCollection;
    var teamB = statistic?.TeamB ?? StatisticsResult.PlayerNameResult.EmptyCollection;
    var teams = new List<List<StatisticsResult.PlayerNameResult>> { teamA, teamB };
}

<p>@match.Campaign</p>

@foreach (var team in teams)
{
    foreach (var playerName in team)
    {
        <img src="@UserAvatar[playerName.CommunityId]" alt="@playerName.Name"/>
        <a href="@playerName.ProfileUrl">
            <p>@playerName.Name</p>
        </a>
    }
}

<ul class="nav nav-tabs">
    @for (var round = 1; round <= halves.Count; round++)
    {
        var firstRound = round == 1;

        <li class="@(firstRound ? "active" : string.Empty)">
            <a href="#tab-round-half-@round" data-toggle="tab">
                Round @round
            </a>
        </li>
    }
</ul>

<div class="tab-content">
    @for (var round = 1; round <= halves.Count; round++)
    {
        var firstRound = round == 1;
        var half = halves[round - 1];
        var roundHalf = half.RoundHalf;

        <div id="tab-round-half-@round" class="tab-pane fade @(firstRound ? "in active" : string.Empty)">
            <p>
                Deaths: @((roundHalf?.Deaths ?? 0).ToString("N0"))
            </p>
        </div>
    }
</div>